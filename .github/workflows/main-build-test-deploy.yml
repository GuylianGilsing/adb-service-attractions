name: "Build, test, and deploy the main branche"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Go to this branche"
        uses: 'actions/checkout@v2'
      - name: "Set up JDK 11"
        uses: 'actions/setup-java@v2'
        with:
          distribution: 'zulu'
          java-version: '16'
      - name: "Create main property file"
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application-docker.properties
          
          echo "spring.jpa.hibernate.ddl-auto=update" >> ./src/main/resources/application-docker.properties
          echo "spring.datasource.url=jdbc:mysql://db:3306/adb-attractions-service" >> ./src/main/resources/application-docker.properties
          echo "spring.datasource.username=${{ secrets.DB_USERNAME }}" >> ./src/main/resources/application-docker.properties
          echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> ./src/main/resources/application-docker.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> ./src/main/resources/application-docker.properties

          echo "#Wait 30seconds for database connection" >> ./src/main/resources/application-docker.properties
          echo "spring.datasource.hikari.minimum-idle= 0" >> ./src/main/resources/application-docker.properties
          echo "spring.datasource.hikari.initialization-fail-timeout= -1" >> ./src/main/resources/application-docker.properties
          echo "spring.sql.init.continue-on-error= true" >> ./src/main/resources/application-docker.properties
      - name: "Run maven commands"
        run: |
          'mvn clean install'
          'mvn spring-boot:test'
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        run: |
            export DOCKER_BUILDKIT=0
            export COMPOSE_DOCKER_CLI_BUILD=0
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/adb-service-attractions:latest .
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/adb-service-attractions:latest
